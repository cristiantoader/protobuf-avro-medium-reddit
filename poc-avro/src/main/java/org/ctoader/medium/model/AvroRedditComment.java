/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.ctoader.medium.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroRedditComment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7333765779711948331L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroRedditComment\",\"namespace\":\"org.ctoader.medium.model\",\"fields\":[{\"name\":\"created_utc\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"ups\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"subreddit_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"link_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"score_hidden\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"author_flair_css_class\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"author_flair_text\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subreddit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"removal_reason\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gilded\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"downs\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"archived\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"author\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"score\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"retrieved_on\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"body\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"distinguished\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"edited\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"controversiality\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"parent_id\",\"type\":[\"null\",\"string\"],\"default\":null}],\"default\":null}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroRedditComment> ENCODER =
      new BinaryMessageEncoder<AvroRedditComment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroRedditComment> DECODER =
      new BinaryMessageDecoder<AvroRedditComment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroRedditComment> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroRedditComment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroRedditComment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroRedditComment>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroRedditComment to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroRedditComment from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroRedditComment instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroRedditComment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Long created_utc;
  @Deprecated public java.lang.Integer ups;
  @Deprecated public java.lang.CharSequence subreddit_id;
  @Deprecated public java.lang.CharSequence link_id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.Integer score_hidden;
  @Deprecated public java.lang.CharSequence author_flair_css_class;
  @Deprecated public java.lang.CharSequence author_flair_text;
  @Deprecated public java.lang.CharSequence subreddit;
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence removal_reason;
  @Deprecated public java.lang.Integer gilded;
  @Deprecated public java.lang.Integer downs;
  @Deprecated public java.lang.Integer archived;
  @Deprecated public java.lang.CharSequence author;
  @Deprecated public java.lang.Integer score;
  @Deprecated public java.lang.Integer retrieved_on;
  @Deprecated public java.lang.CharSequence body;
  @Deprecated public java.lang.CharSequence distinguished;
  @Deprecated public java.lang.Integer edited;
  @Deprecated public java.lang.Integer controversiality;
  @Deprecated public java.lang.CharSequence parent_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroRedditComment() {}

  /**
   * All-args constructor.
   * @param created_utc The new value for created_utc
   * @param ups The new value for ups
   * @param subreddit_id The new value for subreddit_id
   * @param link_id The new value for link_id
   * @param name The new value for name
   * @param score_hidden The new value for score_hidden
   * @param author_flair_css_class The new value for author_flair_css_class
   * @param author_flair_text The new value for author_flair_text
   * @param subreddit The new value for subreddit
   * @param id The new value for id
   * @param removal_reason The new value for removal_reason
   * @param gilded The new value for gilded
   * @param downs The new value for downs
   * @param archived The new value for archived
   * @param author The new value for author
   * @param score The new value for score
   * @param retrieved_on The new value for retrieved_on
   * @param body The new value for body
   * @param distinguished The new value for distinguished
   * @param edited The new value for edited
   * @param controversiality The new value for controversiality
   * @param parent_id The new value for parent_id
   */
  public AvroRedditComment(java.lang.Long created_utc, java.lang.Integer ups, java.lang.CharSequence subreddit_id, java.lang.CharSequence link_id, java.lang.CharSequence name, java.lang.Integer score_hidden, java.lang.CharSequence author_flair_css_class, java.lang.CharSequence author_flair_text, java.lang.CharSequence subreddit, java.lang.CharSequence id, java.lang.CharSequence removal_reason, java.lang.Integer gilded, java.lang.Integer downs, java.lang.Integer archived, java.lang.CharSequence author, java.lang.Integer score, java.lang.Integer retrieved_on, java.lang.CharSequence body, java.lang.CharSequence distinguished, java.lang.Integer edited, java.lang.Integer controversiality, java.lang.CharSequence parent_id) {
    this.created_utc = created_utc;
    this.ups = ups;
    this.subreddit_id = subreddit_id;
    this.link_id = link_id;
    this.name = name;
    this.score_hidden = score_hidden;
    this.author_flair_css_class = author_flair_css_class;
    this.author_flair_text = author_flair_text;
    this.subreddit = subreddit;
    this.id = id;
    this.removal_reason = removal_reason;
    this.gilded = gilded;
    this.downs = downs;
    this.archived = archived;
    this.author = author;
    this.score = score;
    this.retrieved_on = retrieved_on;
    this.body = body;
    this.distinguished = distinguished;
    this.edited = edited;
    this.controversiality = controversiality;
    this.parent_id = parent_id;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return created_utc;
    case 1: return ups;
    case 2: return subreddit_id;
    case 3: return link_id;
    case 4: return name;
    case 5: return score_hidden;
    case 6: return author_flair_css_class;
    case 7: return author_flair_text;
    case 8: return subreddit;
    case 9: return id;
    case 10: return removal_reason;
    case 11: return gilded;
    case 12: return downs;
    case 13: return archived;
    case 14: return author;
    case 15: return score;
    case 16: return retrieved_on;
    case 17: return body;
    case 18: return distinguished;
    case 19: return edited;
    case 20: return controversiality;
    case 21: return parent_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: created_utc = (java.lang.Long)value$; break;
    case 1: ups = (java.lang.Integer)value$; break;
    case 2: subreddit_id = (java.lang.CharSequence)value$; break;
    case 3: link_id = (java.lang.CharSequence)value$; break;
    case 4: name = (java.lang.CharSequence)value$; break;
    case 5: score_hidden = (java.lang.Integer)value$; break;
    case 6: author_flair_css_class = (java.lang.CharSequence)value$; break;
    case 7: author_flair_text = (java.lang.CharSequence)value$; break;
    case 8: subreddit = (java.lang.CharSequence)value$; break;
    case 9: id = (java.lang.CharSequence)value$; break;
    case 10: removal_reason = (java.lang.CharSequence)value$; break;
    case 11: gilded = (java.lang.Integer)value$; break;
    case 12: downs = (java.lang.Integer)value$; break;
    case 13: archived = (java.lang.Integer)value$; break;
    case 14: author = (java.lang.CharSequence)value$; break;
    case 15: score = (java.lang.Integer)value$; break;
    case 16: retrieved_on = (java.lang.Integer)value$; break;
    case 17: body = (java.lang.CharSequence)value$; break;
    case 18: distinguished = (java.lang.CharSequence)value$; break;
    case 19: edited = (java.lang.Integer)value$; break;
    case 20: controversiality = (java.lang.Integer)value$; break;
    case 21: parent_id = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'created_utc' field.
   * @return The value of the 'created_utc' field.
   */
  public java.lang.Long getCreatedUtc() {
    return created_utc;
  }


  /**
   * Sets the value of the 'created_utc' field.
   * @param value the value to set.
   */
  public void setCreatedUtc(java.lang.Long value) {
    this.created_utc = value;
  }

  /**
   * Gets the value of the 'ups' field.
   * @return The value of the 'ups' field.
   */
  public java.lang.Integer getUps() {
    return ups;
  }


  /**
   * Sets the value of the 'ups' field.
   * @param value the value to set.
   */
  public void setUps(java.lang.Integer value) {
    this.ups = value;
  }

  /**
   * Gets the value of the 'subreddit_id' field.
   * @return The value of the 'subreddit_id' field.
   */
  public java.lang.CharSequence getSubredditId() {
    return subreddit_id;
  }


  /**
   * Sets the value of the 'subreddit_id' field.
   * @param value the value to set.
   */
  public void setSubredditId(java.lang.CharSequence value) {
    this.subreddit_id = value;
  }

  /**
   * Gets the value of the 'link_id' field.
   * @return The value of the 'link_id' field.
   */
  public java.lang.CharSequence getLinkId() {
    return link_id;
  }


  /**
   * Sets the value of the 'link_id' field.
   * @param value the value to set.
   */
  public void setLinkId(java.lang.CharSequence value) {
    this.link_id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'score_hidden' field.
   * @return The value of the 'score_hidden' field.
   */
  public java.lang.Integer getScoreHidden() {
    return score_hidden;
  }


  /**
   * Sets the value of the 'score_hidden' field.
   * @param value the value to set.
   */
  public void setScoreHidden(java.lang.Integer value) {
    this.score_hidden = value;
  }

  /**
   * Gets the value of the 'author_flair_css_class' field.
   * @return The value of the 'author_flair_css_class' field.
   */
  public java.lang.CharSequence getAuthorFlairCssClass() {
    return author_flair_css_class;
  }


  /**
   * Sets the value of the 'author_flair_css_class' field.
   * @param value the value to set.
   */
  public void setAuthorFlairCssClass(java.lang.CharSequence value) {
    this.author_flair_css_class = value;
  }

  /**
   * Gets the value of the 'author_flair_text' field.
   * @return The value of the 'author_flair_text' field.
   */
  public java.lang.CharSequence getAuthorFlairText() {
    return author_flair_text;
  }


  /**
   * Sets the value of the 'author_flair_text' field.
   * @param value the value to set.
   */
  public void setAuthorFlairText(java.lang.CharSequence value) {
    this.author_flair_text = value;
  }

  /**
   * Gets the value of the 'subreddit' field.
   * @return The value of the 'subreddit' field.
   */
  public java.lang.CharSequence getSubreddit() {
    return subreddit;
  }


  /**
   * Sets the value of the 'subreddit' field.
   * @param value the value to set.
   */
  public void setSubreddit(java.lang.CharSequence value) {
    this.subreddit = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'removal_reason' field.
   * @return The value of the 'removal_reason' field.
   */
  public java.lang.CharSequence getRemovalReason() {
    return removal_reason;
  }


  /**
   * Sets the value of the 'removal_reason' field.
   * @param value the value to set.
   */
  public void setRemovalReason(java.lang.CharSequence value) {
    this.removal_reason = value;
  }

  /**
   * Gets the value of the 'gilded' field.
   * @return The value of the 'gilded' field.
   */
  public java.lang.Integer getGilded() {
    return gilded;
  }


  /**
   * Sets the value of the 'gilded' field.
   * @param value the value to set.
   */
  public void setGilded(java.lang.Integer value) {
    this.gilded = value;
  }

  /**
   * Gets the value of the 'downs' field.
   * @return The value of the 'downs' field.
   */
  public java.lang.Integer getDowns() {
    return downs;
  }


  /**
   * Sets the value of the 'downs' field.
   * @param value the value to set.
   */
  public void setDowns(java.lang.Integer value) {
    this.downs = value;
  }

  /**
   * Gets the value of the 'archived' field.
   * @return The value of the 'archived' field.
   */
  public java.lang.Integer getArchived() {
    return archived;
  }


  /**
   * Sets the value of the 'archived' field.
   * @param value the value to set.
   */
  public void setArchived(java.lang.Integer value) {
    this.archived = value;
  }

  /**
   * Gets the value of the 'author' field.
   * @return The value of the 'author' field.
   */
  public java.lang.CharSequence getAuthor() {
    return author;
  }


  /**
   * Sets the value of the 'author' field.
   * @param value the value to set.
   */
  public void setAuthor(java.lang.CharSequence value) {
    this.author = value;
  }

  /**
   * Gets the value of the 'score' field.
   * @return The value of the 'score' field.
   */
  public java.lang.Integer getScore() {
    return score;
  }


  /**
   * Sets the value of the 'score' field.
   * @param value the value to set.
   */
  public void setScore(java.lang.Integer value) {
    this.score = value;
  }

  /**
   * Gets the value of the 'retrieved_on' field.
   * @return The value of the 'retrieved_on' field.
   */
  public java.lang.Integer getRetrievedOn() {
    return retrieved_on;
  }


  /**
   * Sets the value of the 'retrieved_on' field.
   * @param value the value to set.
   */
  public void setRetrievedOn(java.lang.Integer value) {
    this.retrieved_on = value;
  }

  /**
   * Gets the value of the 'body' field.
   * @return The value of the 'body' field.
   */
  public java.lang.CharSequence getBody() {
    return body;
  }


  /**
   * Sets the value of the 'body' field.
   * @param value the value to set.
   */
  public void setBody(java.lang.CharSequence value) {
    this.body = value;
  }

  /**
   * Gets the value of the 'distinguished' field.
   * @return The value of the 'distinguished' field.
   */
  public java.lang.CharSequence getDistinguished() {
    return distinguished;
  }


  /**
   * Sets the value of the 'distinguished' field.
   * @param value the value to set.
   */
  public void setDistinguished(java.lang.CharSequence value) {
    this.distinguished = value;
  }

  /**
   * Gets the value of the 'edited' field.
   * @return The value of the 'edited' field.
   */
  public java.lang.Integer getEdited() {
    return edited;
  }


  /**
   * Sets the value of the 'edited' field.
   * @param value the value to set.
   */
  public void setEdited(java.lang.Integer value) {
    this.edited = value;
  }

  /**
   * Gets the value of the 'controversiality' field.
   * @return The value of the 'controversiality' field.
   */
  public java.lang.Integer getControversiality() {
    return controversiality;
  }


  /**
   * Sets the value of the 'controversiality' field.
   * @param value the value to set.
   */
  public void setControversiality(java.lang.Integer value) {
    this.controversiality = value;
  }

  /**
   * Gets the value of the 'parent_id' field.
   * @return The value of the 'parent_id' field.
   */
  public java.lang.CharSequence getParentId() {
    return parent_id;
  }


  /**
   * Sets the value of the 'parent_id' field.
   * @param value the value to set.
   */
  public void setParentId(java.lang.CharSequence value) {
    this.parent_id = value;
  }

  /**
   * Creates a new AvroRedditComment RecordBuilder.
   * @return A new AvroRedditComment RecordBuilder
   */
  public static org.ctoader.medium.model.AvroRedditComment.Builder newBuilder() {
    return new org.ctoader.medium.model.AvroRedditComment.Builder();
  }

  /**
   * Creates a new AvroRedditComment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroRedditComment RecordBuilder
   */
  public static org.ctoader.medium.model.AvroRedditComment.Builder newBuilder(org.ctoader.medium.model.AvroRedditComment.Builder other) {
    if (other == null) {
      return new org.ctoader.medium.model.AvroRedditComment.Builder();
    } else {
      return new org.ctoader.medium.model.AvroRedditComment.Builder(other);
    }
  }

  /**
   * Creates a new AvroRedditComment RecordBuilder by copying an existing AvroRedditComment instance.
   * @param other The existing instance to copy.
   * @return A new AvroRedditComment RecordBuilder
   */
  public static org.ctoader.medium.model.AvroRedditComment.Builder newBuilder(org.ctoader.medium.model.AvroRedditComment other) {
    if (other == null) {
      return new org.ctoader.medium.model.AvroRedditComment.Builder();
    } else {
      return new org.ctoader.medium.model.AvroRedditComment.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroRedditComment instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroRedditComment>
    implements org.apache.avro.data.RecordBuilder<AvroRedditComment> {

    private java.lang.Long created_utc;
    private java.lang.Integer ups;
    private java.lang.CharSequence subreddit_id;
    private java.lang.CharSequence link_id;
    private java.lang.CharSequence name;
    private java.lang.Integer score_hidden;
    private java.lang.CharSequence author_flair_css_class;
    private java.lang.CharSequence author_flair_text;
    private java.lang.CharSequence subreddit;
    private java.lang.CharSequence id;
    private java.lang.CharSequence removal_reason;
    private java.lang.Integer gilded;
    private java.lang.Integer downs;
    private java.lang.Integer archived;
    private java.lang.CharSequence author;
    private java.lang.Integer score;
    private java.lang.Integer retrieved_on;
    private java.lang.CharSequence body;
    private java.lang.CharSequence distinguished;
    private java.lang.Integer edited;
    private java.lang.Integer controversiality;
    private java.lang.CharSequence parent_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.ctoader.medium.model.AvroRedditComment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.created_utc)) {
        this.created_utc = data().deepCopy(fields()[0].schema(), other.created_utc);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ups)) {
        this.ups = data().deepCopy(fields()[1].schema(), other.ups);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.subreddit_id)) {
        this.subreddit_id = data().deepCopy(fields()[2].schema(), other.subreddit_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.link_id)) {
        this.link_id = data().deepCopy(fields()[3].schema(), other.link_id);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.score_hidden)) {
        this.score_hidden = data().deepCopy(fields()[5].schema(), other.score_hidden);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.author_flair_css_class)) {
        this.author_flair_css_class = data().deepCopy(fields()[6].schema(), other.author_flair_css_class);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.author_flair_text)) {
        this.author_flair_text = data().deepCopy(fields()[7].schema(), other.author_flair_text);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.subreddit)) {
        this.subreddit = data().deepCopy(fields()[8].schema(), other.subreddit);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.id)) {
        this.id = data().deepCopy(fields()[9].schema(), other.id);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.removal_reason)) {
        this.removal_reason = data().deepCopy(fields()[10].schema(), other.removal_reason);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.gilded)) {
        this.gilded = data().deepCopy(fields()[11].schema(), other.gilded);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.downs)) {
        this.downs = data().deepCopy(fields()[12].schema(), other.downs);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.archived)) {
        this.archived = data().deepCopy(fields()[13].schema(), other.archived);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.author)) {
        this.author = data().deepCopy(fields()[14].schema(), other.author);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.score)) {
        this.score = data().deepCopy(fields()[15].schema(), other.score);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.retrieved_on)) {
        this.retrieved_on = data().deepCopy(fields()[16].schema(), other.retrieved_on);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.body)) {
        this.body = data().deepCopy(fields()[17].schema(), other.body);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.distinguished)) {
        this.distinguished = data().deepCopy(fields()[18].schema(), other.distinguished);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.edited)) {
        this.edited = data().deepCopy(fields()[19].schema(), other.edited);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.controversiality)) {
        this.controversiality = data().deepCopy(fields()[20].schema(), other.controversiality);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.parent_id)) {
        this.parent_id = data().deepCopy(fields()[21].schema(), other.parent_id);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroRedditComment instance
     * @param other The existing instance to copy.
     */
    private Builder(org.ctoader.medium.model.AvroRedditComment other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.created_utc)) {
        this.created_utc = data().deepCopy(fields()[0].schema(), other.created_utc);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ups)) {
        this.ups = data().deepCopy(fields()[1].schema(), other.ups);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.subreddit_id)) {
        this.subreddit_id = data().deepCopy(fields()[2].schema(), other.subreddit_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.link_id)) {
        this.link_id = data().deepCopy(fields()[3].schema(), other.link_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.score_hidden)) {
        this.score_hidden = data().deepCopy(fields()[5].schema(), other.score_hidden);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.author_flair_css_class)) {
        this.author_flair_css_class = data().deepCopy(fields()[6].schema(), other.author_flair_css_class);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.author_flair_text)) {
        this.author_flair_text = data().deepCopy(fields()[7].schema(), other.author_flair_text);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.subreddit)) {
        this.subreddit = data().deepCopy(fields()[8].schema(), other.subreddit);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.id)) {
        this.id = data().deepCopy(fields()[9].schema(), other.id);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.removal_reason)) {
        this.removal_reason = data().deepCopy(fields()[10].schema(), other.removal_reason);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.gilded)) {
        this.gilded = data().deepCopy(fields()[11].schema(), other.gilded);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.downs)) {
        this.downs = data().deepCopy(fields()[12].schema(), other.downs);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.archived)) {
        this.archived = data().deepCopy(fields()[13].schema(), other.archived);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.author)) {
        this.author = data().deepCopy(fields()[14].schema(), other.author);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.score)) {
        this.score = data().deepCopy(fields()[15].schema(), other.score);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.retrieved_on)) {
        this.retrieved_on = data().deepCopy(fields()[16].schema(), other.retrieved_on);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.body)) {
        this.body = data().deepCopy(fields()[17].schema(), other.body);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.distinguished)) {
        this.distinguished = data().deepCopy(fields()[18].schema(), other.distinguished);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.edited)) {
        this.edited = data().deepCopy(fields()[19].schema(), other.edited);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.controversiality)) {
        this.controversiality = data().deepCopy(fields()[20].schema(), other.controversiality);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.parent_id)) {
        this.parent_id = data().deepCopy(fields()[21].schema(), other.parent_id);
        fieldSetFlags()[21] = true;
      }
    }

    /**
      * Gets the value of the 'created_utc' field.
      * @return The value.
      */
    public java.lang.Long getCreatedUtc() {
      return created_utc;
    }


    /**
      * Sets the value of the 'created_utc' field.
      * @param value The value of 'created_utc'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setCreatedUtc(java.lang.Long value) {
      validate(fields()[0], value);
      this.created_utc = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'created_utc' field has been set.
      * @return True if the 'created_utc' field has been set, false otherwise.
      */
    public boolean hasCreatedUtc() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'created_utc' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearCreatedUtc() {
      created_utc = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ups' field.
      * @return The value.
      */
    public java.lang.Integer getUps() {
      return ups;
    }


    /**
      * Sets the value of the 'ups' field.
      * @param value The value of 'ups'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setUps(java.lang.Integer value) {
      validate(fields()[1], value);
      this.ups = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ups' field has been set.
      * @return True if the 'ups' field has been set, false otherwise.
      */
    public boolean hasUps() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ups' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearUps() {
      ups = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'subreddit_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubredditId() {
      return subreddit_id;
    }


    /**
      * Sets the value of the 'subreddit_id' field.
      * @param value The value of 'subreddit_id'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setSubredditId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.subreddit_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'subreddit_id' field has been set.
      * @return True if the 'subreddit_id' field has been set, false otherwise.
      */
    public boolean hasSubredditId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'subreddit_id' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearSubredditId() {
      subreddit_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'link_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getLinkId() {
      return link_id;
    }


    /**
      * Sets the value of the 'link_id' field.
      * @param value The value of 'link_id'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setLinkId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.link_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'link_id' field has been set.
      * @return True if the 'link_id' field has been set, false otherwise.
      */
    public boolean hasLinkId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'link_id' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearLinkId() {
      link_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'score_hidden' field.
      * @return The value.
      */
    public java.lang.Integer getScoreHidden() {
      return score_hidden;
    }


    /**
      * Sets the value of the 'score_hidden' field.
      * @param value The value of 'score_hidden'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setScoreHidden(java.lang.Integer value) {
      validate(fields()[5], value);
      this.score_hidden = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'score_hidden' field has been set.
      * @return True if the 'score_hidden' field has been set, false otherwise.
      */
    public boolean hasScoreHidden() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'score_hidden' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearScoreHidden() {
      score_hidden = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'author_flair_css_class' field.
      * @return The value.
      */
    public java.lang.CharSequence getAuthorFlairCssClass() {
      return author_flair_css_class;
    }


    /**
      * Sets the value of the 'author_flair_css_class' field.
      * @param value The value of 'author_flair_css_class'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setAuthorFlairCssClass(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.author_flair_css_class = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'author_flair_css_class' field has been set.
      * @return True if the 'author_flair_css_class' field has been set, false otherwise.
      */
    public boolean hasAuthorFlairCssClass() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'author_flair_css_class' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearAuthorFlairCssClass() {
      author_flair_css_class = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'author_flair_text' field.
      * @return The value.
      */
    public java.lang.CharSequence getAuthorFlairText() {
      return author_flair_text;
    }


    /**
      * Sets the value of the 'author_flair_text' field.
      * @param value The value of 'author_flair_text'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setAuthorFlairText(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.author_flair_text = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'author_flair_text' field has been set.
      * @return True if the 'author_flair_text' field has been set, false otherwise.
      */
    public boolean hasAuthorFlairText() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'author_flair_text' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearAuthorFlairText() {
      author_flair_text = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'subreddit' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubreddit() {
      return subreddit;
    }


    /**
      * Sets the value of the 'subreddit' field.
      * @param value The value of 'subreddit'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setSubreddit(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.subreddit = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'subreddit' field has been set.
      * @return True if the 'subreddit' field has been set, false otherwise.
      */
    public boolean hasSubreddit() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'subreddit' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearSubreddit() {
      subreddit = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setId(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.id = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearId() {
      id = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'removal_reason' field.
      * @return The value.
      */
    public java.lang.CharSequence getRemovalReason() {
      return removal_reason;
    }


    /**
      * Sets the value of the 'removal_reason' field.
      * @param value The value of 'removal_reason'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setRemovalReason(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.removal_reason = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'removal_reason' field has been set.
      * @return True if the 'removal_reason' field has been set, false otherwise.
      */
    public boolean hasRemovalReason() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'removal_reason' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearRemovalReason() {
      removal_reason = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'gilded' field.
      * @return The value.
      */
    public java.lang.Integer getGilded() {
      return gilded;
    }


    /**
      * Sets the value of the 'gilded' field.
      * @param value The value of 'gilded'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setGilded(java.lang.Integer value) {
      validate(fields()[11], value);
      this.gilded = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'gilded' field has been set.
      * @return True if the 'gilded' field has been set, false otherwise.
      */
    public boolean hasGilded() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'gilded' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearGilded() {
      gilded = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'downs' field.
      * @return The value.
      */
    public java.lang.Integer getDowns() {
      return downs;
    }


    /**
      * Sets the value of the 'downs' field.
      * @param value The value of 'downs'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setDowns(java.lang.Integer value) {
      validate(fields()[12], value);
      this.downs = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'downs' field has been set.
      * @return True if the 'downs' field has been set, false otherwise.
      */
    public boolean hasDowns() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'downs' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearDowns() {
      downs = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'archived' field.
      * @return The value.
      */
    public java.lang.Integer getArchived() {
      return archived;
    }


    /**
      * Sets the value of the 'archived' field.
      * @param value The value of 'archived'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setArchived(java.lang.Integer value) {
      validate(fields()[13], value);
      this.archived = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'archived' field has been set.
      * @return True if the 'archived' field has been set, false otherwise.
      */
    public boolean hasArchived() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'archived' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearArchived() {
      archived = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'author' field.
      * @return The value.
      */
    public java.lang.CharSequence getAuthor() {
      return author;
    }


    /**
      * Sets the value of the 'author' field.
      * @param value The value of 'author'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setAuthor(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.author = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'author' field has been set.
      * @return True if the 'author' field has been set, false otherwise.
      */
    public boolean hasAuthor() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'author' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearAuthor() {
      author = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'score' field.
      * @return The value.
      */
    public java.lang.Integer getScore() {
      return score;
    }


    /**
      * Sets the value of the 'score' field.
      * @param value The value of 'score'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setScore(java.lang.Integer value) {
      validate(fields()[15], value);
      this.score = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'score' field has been set.
      * @return True if the 'score' field has been set, false otherwise.
      */
    public boolean hasScore() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'score' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearScore() {
      score = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'retrieved_on' field.
      * @return The value.
      */
    public java.lang.Integer getRetrievedOn() {
      return retrieved_on;
    }


    /**
      * Sets the value of the 'retrieved_on' field.
      * @param value The value of 'retrieved_on'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setRetrievedOn(java.lang.Integer value) {
      validate(fields()[16], value);
      this.retrieved_on = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'retrieved_on' field has been set.
      * @return True if the 'retrieved_on' field has been set, false otherwise.
      */
    public boolean hasRetrievedOn() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'retrieved_on' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearRetrievedOn() {
      retrieved_on = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'body' field.
      * @return The value.
      */
    public java.lang.CharSequence getBody() {
      return body;
    }


    /**
      * Sets the value of the 'body' field.
      * @param value The value of 'body'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setBody(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.body = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'body' field has been set.
      * @return True if the 'body' field has been set, false otherwise.
      */
    public boolean hasBody() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'body' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearBody() {
      body = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'distinguished' field.
      * @return The value.
      */
    public java.lang.CharSequence getDistinguished() {
      return distinguished;
    }


    /**
      * Sets the value of the 'distinguished' field.
      * @param value The value of 'distinguished'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setDistinguished(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.distinguished = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'distinguished' field has been set.
      * @return True if the 'distinguished' field has been set, false otherwise.
      */
    public boolean hasDistinguished() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'distinguished' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearDistinguished() {
      distinguished = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'edited' field.
      * @return The value.
      */
    public java.lang.Integer getEdited() {
      return edited;
    }


    /**
      * Sets the value of the 'edited' field.
      * @param value The value of 'edited'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setEdited(java.lang.Integer value) {
      validate(fields()[19], value);
      this.edited = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'edited' field has been set.
      * @return True if the 'edited' field has been set, false otherwise.
      */
    public boolean hasEdited() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'edited' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearEdited() {
      edited = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'controversiality' field.
      * @return The value.
      */
    public java.lang.Integer getControversiality() {
      return controversiality;
    }


    /**
      * Sets the value of the 'controversiality' field.
      * @param value The value of 'controversiality'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setControversiality(java.lang.Integer value) {
      validate(fields()[20], value);
      this.controversiality = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'controversiality' field has been set.
      * @return True if the 'controversiality' field has been set, false otherwise.
      */
    public boolean hasControversiality() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'controversiality' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearControversiality() {
      controversiality = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'parent_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getParentId() {
      return parent_id;
    }


    /**
      * Sets the value of the 'parent_id' field.
      * @param value The value of 'parent_id'.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder setParentId(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.parent_id = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'parent_id' field has been set.
      * @return True if the 'parent_id' field has been set, false otherwise.
      */
    public boolean hasParentId() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'parent_id' field.
      * @return This builder.
      */
    public org.ctoader.medium.model.AvroRedditComment.Builder clearParentId() {
      parent_id = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroRedditComment build() {
      try {
        AvroRedditComment record = new AvroRedditComment();
        record.created_utc = fieldSetFlags()[0] ? this.created_utc : (java.lang.Long) defaultValue(fields()[0]);
        record.ups = fieldSetFlags()[1] ? this.ups : (java.lang.Integer) defaultValue(fields()[1]);
        record.subreddit_id = fieldSetFlags()[2] ? this.subreddit_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.link_id = fieldSetFlags()[3] ? this.link_id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.score_hidden = fieldSetFlags()[5] ? this.score_hidden : (java.lang.Integer) defaultValue(fields()[5]);
        record.author_flair_css_class = fieldSetFlags()[6] ? this.author_flair_css_class : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.author_flair_text = fieldSetFlags()[7] ? this.author_flair_text : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.subreddit = fieldSetFlags()[8] ? this.subreddit : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.id = fieldSetFlags()[9] ? this.id : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.removal_reason = fieldSetFlags()[10] ? this.removal_reason : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.gilded = fieldSetFlags()[11] ? this.gilded : (java.lang.Integer) defaultValue(fields()[11]);
        record.downs = fieldSetFlags()[12] ? this.downs : (java.lang.Integer) defaultValue(fields()[12]);
        record.archived = fieldSetFlags()[13] ? this.archived : (java.lang.Integer) defaultValue(fields()[13]);
        record.author = fieldSetFlags()[14] ? this.author : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.score = fieldSetFlags()[15] ? this.score : (java.lang.Integer) defaultValue(fields()[15]);
        record.retrieved_on = fieldSetFlags()[16] ? this.retrieved_on : (java.lang.Integer) defaultValue(fields()[16]);
        record.body = fieldSetFlags()[17] ? this.body : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.distinguished = fieldSetFlags()[18] ? this.distinguished : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.edited = fieldSetFlags()[19] ? this.edited : (java.lang.Integer) defaultValue(fields()[19]);
        record.controversiality = fieldSetFlags()[20] ? this.controversiality : (java.lang.Integer) defaultValue(fields()[20]);
        record.parent_id = fieldSetFlags()[21] ? this.parent_id : (java.lang.CharSequence) defaultValue(fields()[21]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroRedditComment>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroRedditComment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroRedditComment>
    READER$ = (org.apache.avro.io.DatumReader<AvroRedditComment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.created_utc == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.created_utc);
    }

    if (this.ups == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.ups);
    }

    if (this.subreddit_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.subreddit_id);
    }

    if (this.link_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.link_id);
    }

    if (this.name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.name);
    }

    if (this.score_hidden == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.score_hidden);
    }

    if (this.author_flair_css_class == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.author_flair_css_class);
    }

    if (this.author_flair_text == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.author_flair_text);
    }

    if (this.subreddit == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.subreddit);
    }

    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    if (this.removal_reason == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.removal_reason);
    }

    if (this.gilded == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.gilded);
    }

    if (this.downs == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.downs);
    }

    if (this.archived == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.archived);
    }

    if (this.author == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.author);
    }

    if (this.score == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.score);
    }

    if (this.retrieved_on == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.retrieved_on);
    }

    if (this.body == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.body);
    }

    if (this.distinguished == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.distinguished);
    }

    if (this.edited == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.edited);
    }

    if (this.controversiality == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.controversiality);
    }

    if (this.parent_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.parent_id);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.created_utc = null;
      } else {
        this.created_utc = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ups = null;
      } else {
        this.ups = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.subreddit_id = null;
      } else {
        this.subreddit_id = in.readString(this.subreddit_id instanceof Utf8 ? (Utf8)this.subreddit_id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.link_id = null;
      } else {
        this.link_id = in.readString(this.link_id instanceof Utf8 ? (Utf8)this.link_id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.name = null;
      } else {
        this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.score_hidden = null;
      } else {
        this.score_hidden = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.author_flair_css_class = null;
      } else {
        this.author_flair_css_class = in.readString(this.author_flair_css_class instanceof Utf8 ? (Utf8)this.author_flair_css_class : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.author_flair_text = null;
      } else {
        this.author_flair_text = in.readString(this.author_flair_text instanceof Utf8 ? (Utf8)this.author_flair_text : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.subreddit = null;
      } else {
        this.subreddit = in.readString(this.subreddit instanceof Utf8 ? (Utf8)this.subreddit : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.removal_reason = null;
      } else {
        this.removal_reason = in.readString(this.removal_reason instanceof Utf8 ? (Utf8)this.removal_reason : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.gilded = null;
      } else {
        this.gilded = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.downs = null;
      } else {
        this.downs = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.archived = null;
      } else {
        this.archived = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.author = null;
      } else {
        this.author = in.readString(this.author instanceof Utf8 ? (Utf8)this.author : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.score = null;
      } else {
        this.score = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.retrieved_on = null;
      } else {
        this.retrieved_on = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.body = null;
      } else {
        this.body = in.readString(this.body instanceof Utf8 ? (Utf8)this.body : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.distinguished = null;
      } else {
        this.distinguished = in.readString(this.distinguished instanceof Utf8 ? (Utf8)this.distinguished : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.edited = null;
      } else {
        this.edited = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.controversiality = null;
      } else {
        this.controversiality = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.parent_id = null;
      } else {
        this.parent_id = in.readString(this.parent_id instanceof Utf8 ? (Utf8)this.parent_id : null);
      }

    } else {
      for (int i = 0; i < 22; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.created_utc = null;
          } else {
            this.created_utc = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ups = null;
          } else {
            this.ups = in.readInt();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.subreddit_id = null;
          } else {
            this.subreddit_id = in.readString(this.subreddit_id instanceof Utf8 ? (Utf8)this.subreddit_id : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.link_id = null;
          } else {
            this.link_id = in.readString(this.link_id instanceof Utf8 ? (Utf8)this.link_id : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.name = null;
          } else {
            this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.score_hidden = null;
          } else {
            this.score_hidden = in.readInt();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.author_flair_css_class = null;
          } else {
            this.author_flair_css_class = in.readString(this.author_flair_css_class instanceof Utf8 ? (Utf8)this.author_flair_css_class : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.author_flair_text = null;
          } else {
            this.author_flair_text = in.readString(this.author_flair_text instanceof Utf8 ? (Utf8)this.author_flair_text : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.subreddit = null;
          } else {
            this.subreddit = in.readString(this.subreddit instanceof Utf8 ? (Utf8)this.subreddit : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.removal_reason = null;
          } else {
            this.removal_reason = in.readString(this.removal_reason instanceof Utf8 ? (Utf8)this.removal_reason : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.gilded = null;
          } else {
            this.gilded = in.readInt();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.downs = null;
          } else {
            this.downs = in.readInt();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.archived = null;
          } else {
            this.archived = in.readInt();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.author = null;
          } else {
            this.author = in.readString(this.author instanceof Utf8 ? (Utf8)this.author : null);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.score = null;
          } else {
            this.score = in.readInt();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.retrieved_on = null;
          } else {
            this.retrieved_on = in.readInt();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.body = null;
          } else {
            this.body = in.readString(this.body instanceof Utf8 ? (Utf8)this.body : null);
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.distinguished = null;
          } else {
            this.distinguished = in.readString(this.distinguished instanceof Utf8 ? (Utf8)this.distinguished : null);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.edited = null;
          } else {
            this.edited = in.readInt();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.controversiality = null;
          } else {
            this.controversiality = in.readInt();
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.parent_id = null;
          } else {
            this.parent_id = in.readString(this.parent_id instanceof Utf8 ? (Utf8)this.parent_id : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










